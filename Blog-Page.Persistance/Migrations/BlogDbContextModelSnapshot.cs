// <auto-generated />
using System;
using Blog_Page.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog_Page.Persistance.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog_Page.Domain.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = 2,
<<<<<<< HEAD
<<<<<<< HEAD
                            CreatedDate = new DateTime(2024, 5, 6, 20, 59, 58, 70, DateTimeKind.Local).AddTicks(550),
=======
                            CreatedDate = new DateTime(2024, 5, 2, 20, 1, 29, 267, DateTimeKind.Local).AddTicks(8413),
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
=======
                            CreatedDate = new DateTime(2024, 5, 2, 20, 1, 29, 267, DateTimeKind.Local).AddTicks(8413),
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
                            Definition = "User",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 1,
<<<<<<< HEAD
<<<<<<< HEAD
                            CreatedDate = new DateTime(2024, 5, 6, 20, 59, 58, 70, DateTimeKind.Local).AddTicks(570),
=======
                            CreatedDate = new DateTime(2024, 5, 2, 20, 1, 29, 267, DateTimeKind.Local).AddTicks(8433),
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
=======
                            CreatedDate = new DateTime(2024, 5, 2, 20, 1, 29, 267, DateTimeKind.Local).AddTicks(8433),
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
                            Definition = "Admin",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AppRoleId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AppRoleId = 1,
<<<<<<< HEAD
<<<<<<< HEAD
                            CreatedDate = new DateTime(2024, 5, 6, 20, 59, 58, 70, DateTimeKind.Local).AddTicks(165),
                            Email = "selimemrem@gmail.com",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "$2a$11$XhIbjX9tcJiW1UdLaKGRdOKVCl0qHfkf.uncwaY.fBEznu9K9pQHK",
=======
                            CreatedDate = new DateTime(2024, 5, 2, 20, 1, 29, 267, DateTimeKind.Local).AddTicks(7945),
                            Email = "selimemrem@gmail.com",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "$2a$11$TTMbiERvsI5sKisceYP.q.4Nd85T2eXuZgBp/33rUVVIce.4fI/..",
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
=======
                            CreatedDate = new DateTime(2024, 5, 2, 20, 1, 29, 267, DateTimeKind.Local).AddTicks(7945),
                            Email = "selimemrem@gmail.com",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "$2a$11$TTMbiERvsI5sKisceYP.q.4Nd85T2eXuZgBp/33rUVVIce.4fI/..",
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
                            Status = 0,
                            userName = "Admin"
                        });
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

<<<<<<< HEAD
<<<<<<< HEAD
                    b.Property<string>("FileNames")
                        .IsRequired()
=======
=======
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
<<<<<<< HEAD
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
=======
>>>>>>> 3288455e8ca16f06a469040823af755f9393d265
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("WriterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("Blog_Page.Domain.Entities.AppRole", "AppRole")
                        .WithMany("AppUser")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.Blog", b =>
                {
                    b.HasOne("Blog_Page.Domain.Entities.Category", "Category")
                        .WithMany("Blog")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.AppRole", b =>
                {
                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Blog_Page.Domain.Entities.Category", b =>
                {
                    b.Navigation("Blog");
                });
#pragma warning restore 612, 618
        }
    }
}
